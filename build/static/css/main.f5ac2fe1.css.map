{"version":3,"file":"static/css/main.f5ac2fe1.css","mappings":"AAGA,aAQE,mBCUA,wCALA,uBACA,sBARA,YAMA,gBATA,sBAYA,eAXA,cDEA,aCWA,oBAnBA,YDYA,YAHA,uBCRA,cAMA,SAWA,UATA,UAGA,qBACA,oBAFA,0CADA,sBDCA,UACA,CCUA,mBACE,UDNI,6CACE,UAaF,6FACE,UAGF,gDACE,UAMR,mBEpCA,mBADA,SAHA,WACA,YAIA,gBAHA,UAJA,kBAQA,mBAPA,SAOA,CFsCA,oBACE,cAGA,YAFA,kBACA,UACA,CAGF,mBAGE,OAFA,kBACA,MAEA,6BAEA,0BACE,UAGF,4BACE,UG9DN,QAME,qBCIiB,CDHjB,UCEiB,CDNjB,wCAEA,QADA,MAIA,WAEA,eAKE,mBADA,aAMA,WAHA,WC8EoB,CD/EpB,8BEVA,iBADA,kBAMF,gBDuEgB,CD/Dd,kBANA,kBEHF,UFUE,CGwJF,0BHlKA,eEME,iBDmEkB,CClElB,kBDkEkB,EEyFpB,0BHlKA,eEWE,iBD+DkB,CC9DlB,kBD8DkB,EEwFpB,0BHlKA,eAeI,YADA,iBADA,aC8DgB,CDxDpB,6BEHE,iBD2DkB,CC1DlB,kBD0DkB,CDxDpB,cAUI,mBARA,qBCrBa,CD2Bb,SACA,aAHA,OAFA,kBAGA,QAFA,MAFA,SCqDgB,EDrCpB,mBACE,YACA,oBAEA,aADA,aAEA,6BGuHF,0BH5HA,mBASI,SACA,SAAQ,CAFR,UAEA,EAGF,yBACE,WAGF,0BACE,WAOJ,yBACE,aAII,gFACE,gBAEA,mFACE,wCAGF,mFACE,UAGF,mFACE,0CAKN,+CACE,wBAKN,qBAUE,0CAHA,mBAHA,aAEA,YAEA,uBAPA,kBAEA,WADA,MAGA,WAIA,SACA,CG6DF,0BHvEA,qBAaI,cAIJ,2BAGE,mBAIA,eANA,aACA,sBAIA,YAFA,8BAIA,kBAHA,UAGA,CAGF,0BAIE,qBC5He,CD6Hf,kBAJA,cAEA,WAIA,kBADA,+CAJA,WAMA,sBAEA,6BACE,MAEF,6BACE,QACA,2BAEF,6BACE,SAIJ,cACE,aACA,iBACA,WACA,+BGiBF,0BHrBA,cASI,mBAKA,qBC3Ja,CDiKb,WATA,OAKA,iBANA,kBAEA,QACA,QCpEiB,CDyEjB,gCAEA,EAOJ,yBAIE,mBADA,aAEA,WFrJF,gBAPE,SAIA,SEwJA,CGXF,0BHMA,yBASI,eADA,KACA,EAOJ,yBAQE,+DCtLiC,CDwLjC,qBACA,6BAVA,UC1Le,CD8Lf,oBACA,eAHA,gBAIA,iBAHA,aAFA,qBAUA,2BGlCF,0BHsBA,yBAgBI,mBADA,eACA,EAGF,+BACE,YAGF,gCACE,UCjNa,CEmKjB,0BHkDA,qBAEI,iBACA,mBIlON,WFOI,iBADA,kBAMF,gBDuEgB,CCtEhB,iBDuEoB,CCtEpB,mBAJA,kBACA,UDyEoB,CEyFpB,0BC7KF,WFiBI,iBDmEkB,CClElB,kBDkEkB,EEyFpB,0BC7KF,WFsBI,iBD+DkB,CC9DlB,kBD8DkB,EEwFpB,0BC7KF,WF2BI,iBD2DkB,CC1DlB,kBD0DkB,EGnFpB,mBFIE,iBADA,kBAMF,gBDuEgB,CCtEhB,iBDuEoB,CCtEpB,mBAJA,kBACA,UDyEoB,CEyFpB,0BC1KA,mBFcE,iBDmEkB,CClElB,kBDkEkB,EEyFpB,0BC1KA,mBFmBE,iBD+DkB,CC9DlB,kBD8DkB,EEwFpB,0BC1KA,mBFwBE,iBD2DkB,CC1DlB,kBD0DkB,EG/EpB,0BFAE,iBADA,kBAMF,cEJqB,CFKrB,iBDuEoB,CCtEpB,mBAJA,kBACA,UDyEoB,CEyFpB,0BCtKA,0BFUE,iBDmEkB,CClElB,kBDkEkB,EEyFpB,0BCtKA,0BFeE,iBD+DkB,CC9DlB,kBD8DkB,EEwFpB,0BCtKA,0BFoBE,iBD2DkB,CC1DlB,kBD0DkB,EItFtB,OAIE,UJMiB,CILjB,eACA,kBACA,gBACA,aAAY,CANZ,gBADA,YAOA,CAEA,YACE,aJEgB,CEgKlB,0BE7KF,OAeI,gBAGF,eACE,eF0JF,0BE3JA,eAII,gBFuJJ,0BE3JA,eAQI,gBAOJ,eACE,eF2IF,0BE5IA,eAII,gBFwIJ,0BE5IA,eAQI,gBAIJ,gBACE,eF+HF,0BEhIA,gBAII,gBChDN,QAME,mBRYA,wCALA,uBQJA,wBLIkB,CHClB,sBARA,YAMA,gBQDA,oBRRA,sBQOA,WRKA,eAXA,cQCA,oBRYA,oBQFA,eAHA,gBAIA,mBRXA,SQEA,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","sources":["widgets/header/ui/CartButton.scss","shared/scss/abstracts/mixins/_reset-styles.scss","shared/scss/abstracts/mixins/_hidden.scss","widgets/header/ui/Header.scss","shared/scss/abstracts/_variables.scss","shared/scss/abstracts/mixins/_container.scss","shared/scss/abstracts/mixins/_media.scss","shared/ui/Container/Container.scss","shared/ui/Title/Title.scss","shared/ui/Button/Button.scss","widgets/intro/ui/Intro.scss","widgets/offers/ui/Offers.scss","widgets/space-journey/ui/SpaceJourney.scss","widgets/footer/ui/Footer.scss","../node_modules/modern-normalize/modern-normalize.css","shared/scss/base/_fonts.scss","shared/scss/base/_animations.scss","shared/scss/base/_global.scss"],"sourcesContent":["@use 'sass:color';\n@use '../../../shared/scss/abstracts' as *;\n\n.cart-button {\n  $block-name: &;\n\n  @include reset-btn;\n  @include reset-text-indents;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 50px;\n  height: 50px;\n\n  &:hover {\n    #{$block-name} {\n      &__icon {\n        &--white {\n          opacity: 0;\n        }\n\n        &--colored {\n          opacity: 1;\n        }\n      }\n    }\n  }\n\n  &:active {\n    #{$block-name} {\n      &__icon {\n        &--white {\n          opacity: 1;\n        }\n\n        &--colored {\n          opacity: 0;\n        }\n      }\n    }\n  }\n\n  &__text {\n    @include visually-hidden;\n  }\n\n  &__icons {\n    display: block;\n    position: relative;\n    width: 24px;\n    height: 20px;\n  }\n\n  &__icon {\n    position: absolute;\n    top: 0;\n    left: 0;\n    transition: opacity $transition-fast;\n\n    &--white {\n      opacity: 1;\n    }\n\n    &--colored {\n      opacity: 0;\n    }\n  }\n}\n","@mixin reset-text-indents() {\n  font-size: 0;\n  line-height: 0;\n}\n\n@mixin reset-btn() {\n  box-sizing: border-box;\n  display: block;\n  margin: 0;\n  border: none;\n  padding: 0;\n  vertical-align: middle;\n  user-select: none;\n  text-decoration: none;\n  text-transform: none;\n  border-radius: 0;\n  background-color: transparent;\n  background-image: none;\n  cursor: pointer;\n  outline: 0;\n  font-family: inherit;\n  appearance: none;\n\n  &:focus {\n    outline: 0;\n  }\n}\n\n@mixin unlist($margin: true, $padding: true) {\n  @if $margin {\n    margin: 0;\n  }\n\n  @if $padding {\n    padding: 0;\n  }\n\n  list-style: none;\n}\n\n@mixin unselectable {\n  -webkit-touch-callout: none;\n  user-select: none;\n}\n\n@mixin selection {\n  ::-moz-selection {\n    @content;\n  }\n\n  ::selection {\n    @content;\n  }\n}\n","@mixin visually-hidden {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  padding: 0;\n  border: 0;\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n  white-space: nowrap;\n}\n","@use '../../../shared/scss/abstracts' as *;\n@use 'sass:color';\n\n.header {\n  $block-name: &;\n\n  position: sticky;\n  top: 0;\n  right: 0;\n  background-color: $color-background-third;\n  color: $color-foreground-fourth;\n  z-index: 10;\n\n  &__inner {\n    @include container;\n\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    height: $header-height-desktop;\n    padding-top: 10px;\n    padding-bottom: 10px;\n    gap: 0 30px;\n\n    @include mq($until: md) {\n      padding-top: 0;\n      padding-bottom: 0;\n      height: $header-height-mobile;\n    }\n  }\n\n  &__left {\n    @include mq($until: md) {\n      background-color: $color-background-third;\n      z-index: 2;\n      position: absolute;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      display: flex;\n      align-items: center;\n      padding-left: $container-gutter-md;\n      padding-right: $container-gutter-md;\n    }\n  }\n\n  &__logo {\n  }\n\n  &__logo-link {\n    color: transparent;\n    display: inline-flex;\n    padding: 10px;\n    margin: -10px;\n    transition: opacity $transition-fast;\n\n    @include mq($until: md) {\n      width: 70px;\n      margin: 0;\n      padding: 0;\n    }\n\n    &:hover {\n      opacity: 0.8;\n    }\n\n    &:active {\n      opacity: 0.6;\n    }\n  }\n\n  &__right {\n  }\n\n  &__burger-checkbox {\n    display: none;\n\n    &:checked {\n      & ~ #{$block-name}__burger-icon {\n        #{$block-name}__burger-icon-line {\n          border-radius: 0;\n\n          &--1 {\n            transform: translateY(9px) rotate(45deg);\n          }\n\n          &--2 {\n            opacity: 0;\n          }\n\n          &--3 {\n            transform: translateY(-9px) rotate(-45deg);\n          }\n        }\n      }\n\n      & ~ #{$block-name}__menu {\n        transform: translate3d(0, 0, 0);\n      }\n    }\n  }\n\n  &__burger-icon {\n    position: absolute;\n    top: 0;\n    right: calc($container-gutter-md - 9px);\n    display: none;\n    width: 48px;\n    height: 48px;\n    align-items: center;\n    justify-content: center;\n    z-index: 3;\n    -webkit-tap-highlight-color: transparent;\n\n    @include mq($until: md) {\n      display: flex;\n    }\n  }\n\n  &__burger-icon-inner {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-between;\n    width: 30px;\n    height: 20px;\n    cursor: pointer;\n    position: relative;\n  }\n\n  &__burger-icon-line {\n    display: block;\n    width: 100%;\n    height: 2px;\n    background-color: $color-background-fourth;\n    border-radius: 2px;\n    transition: transform 0.3s ease, opacity 0.3s ease;\n    position: absolute;\n    will-change: transform;\n\n    &--1 {\n      top: 0;\n    }\n    &--2 {\n      top: 50%;\n      transform: translateY(-50%);\n    }\n    &--3 {\n      bottom: 0;\n    }\n  }\n\n  &__menu {\n    display: flex;\n    flex-wrap: nowrap;\n    gap: 0 30px;\n    transition: transform $transition-fast;\n\n    @include mq($until: md) {\n      padding-top: 10px;\n      padding-bottom: 10px;\n      align-items: center;\n      position: absolute;\n      left: 0;\n      right: 0;\n      top: $header-height-mobile;\n      background-color: $color-background-third;\n      padding-left: 6px;\n      padding-right: 6px;\n\n      transform: translate3d(0, -100%, 0);\n\n      gap: 0 15px;\n    }\n  }\n\n  &__navigation {\n  }\n\n  &__navigation-list {\n    @include unlist;\n\n    display: flex;\n    align-items: center;\n    gap: 0 22px;\n\n    @include mq($until: md) {\n      gap: 0;\n      flex-wrap: wrap;\n    }\n  }\n\n  &__navigation-item {\n  }\n\n  &__navigation-link {\n    color: $color-foreground-fourth;\n    text-decoration: none;\n    font-weight: 700;\n    padding: 15px;\n    display: inline-flex;\n    font-size: 18px;\n    line-height: 21px;\n    background: $gradient-yellow-to-pink-horizontal;\n\n    background-clip: text;\n    -webkit-background-clip: text;\n    transition: color $transition-fast;\n\n    @include mq($until: md) {\n      padding-top: 8px;\n      padding-bottom: 8px;\n    }\n\n    &:hover {\n      color: color.adjust($color-base-black, $alpha: -1);\n    }\n\n    &:active {\n      color: $color-foreground-fourth;\n    }\n  }\n\n  &__cart-button {\n    @include mq($until: md) {\n      margin-left: auto;\n      padding-right: 3px;\n    }\n  }\n}\n","@use 'sass:color';\n\n// Fonts\n\n$font-family-main: 'Lato', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n$font-family-headings: 'Lato', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n\n$base-font-size: 20px !default;\n$base-line-height: 1.2 !default;\n\n// Base Colors\n\n$color-base-white: #fff !default;\n$color-base-black: #000 !default;\n\n$color-base-purple: #ff70d9 !default;\n$color-base-yellow: #ebff00 !default;\n\n$color-base-blue: #304571 !default;\n$color-base-blue-dark: #0d1e48 !default;\n\n// Base Gradients\n\n$gradient-yellow-to-pink-horizontal: linear-gradient(\n  98deg,\n  $color-base-yellow 18.56%,\n  $color-base-purple 76.02%\n);\n\n$gradient-blue-dark-to-blue-horizontal: linear-gradient(\n  196deg,\n  $color-base-blue-dark 0%,\n  $color-base-blue 100%\n);\n\n$gradient-transparent-to-black-horizontal: linear-gradient(\n  180deg,\n  rgba(0, 0, 0, 0.3) 0%,\n  rgba(15, 20, 32, 0.79) 100%\n);\n\n// Semantic Colors\n\n$color-foreground-primary: $color-base-yellow !default;\n$color-foreground-secondary: $color-base-purple !default;\n$color-foreground-third: $color-base-black !default;\n$color-foreground-fourth: $color-base-white !default;\n\n$color-background-primary: $gradient-blue-dark-to-blue-horizontal !default;\n$color-background-secondary: $color-base-yellow !default;\n$color-background-third: $color-base-black !default;\n$color-background-fourth: $color-base-white !default;\n\n$color-text: $color-base-white !default;\n$color-text-muted: color.adjust($color-text, $alpha: -0.4) !default;\n\n// Border Radius\n\n$border-radius-s: 8px !default;\n$border-radius-m: 10px !default;\n$border-radius-l: 12px !default;\n$border-radius-percent-50: 50% !default;\n\n// Breakpoints\n\n$breakpoints-0: 0 !default;\n$breakpoints-xs: 375px !default;\n$breakpoints-sm: 480px !default;\n$breakpoints-md: 768px !default;\n$breakpoints-lg: 1024px !default;\n$breakpoints-xl: 1200px !default;\n$breakpoints-2xl: 1440px !default;\n\n$breakpoints: (\n  '0': $breakpoints-0,\n  'xs': $breakpoints-xs,\n  'sm': $breakpoints-sm,\n  'md': $breakpoints-md,\n  'lg': $breakpoints-lg,\n  'xl': $breakpoints-xl,\n  '2xl': $breakpoints-2xl,\n);\n\n// Container\n\n$container-width: 1148px !default;\n$container-gutter-xl: 30px !default;\n$container-gutter-lg: 20px !default;\n$container-gutter-md: 20px !default;\n\n// Transitions\n\n$transition-fast: 0.15s ease !default;\n$transition-slow: 0.3s ease !default;\n$transition-very-slow: 0.5s ease !default;\n\n// Other\n\n$header-height-desktop: 80px;\n$header-height-mobile: 48px;\n","@use \"../variables\" as *;\n@use \"media\" as *;\n\n@mixin container(\n  $max-width: $container-width,\n  $container-gutter-default: $container-gutter-xl\n) {\n  margin: {\n    right: auto;\n    left: auto;\n  }\n\n  position: relative;\n  width: 100%;\n  max-width: $max-width;\n  padding-left: $container-gutter-default;\n  padding-right: $container-gutter-default;\n\n  @include mq($until: xl) {\n    padding-left: $container-gutter-xl;\n    padding-right: $container-gutter-xl;\n  }\n\n  @include mq($until: lg) {\n    padding-left: $container-gutter-lg;\n    padding-right: $container-gutter-lg;\n  }\n\n  @include mq($until: md) {\n    padding-left: $container-gutter-md;\n    padding-right: $container-gutter-md;\n  }\n}\n","@use \"sass:math\";\n@use \"sass:map\";\n@use \"sass:list\";\n@use \"sass:string\";\n@use \"sass:meta\";\n\n@use \"../variables\" as *;\n\n/// Breakpoint list\n///\n/// Name your breakpoints in a way that creates a ubiquitous language\n/// across team members. It will improve communication between\n/// stakeholders, designers, developers, and testers.\n///\n/// @type Map\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\n\n/// Show breakpoints in the top right corner\n///\n/// If you want to display the currently active breakpoint in the top\n/// right corner of your site during development, add the breakpoints\n/// to this list, ordered by width. For example: (mobile, tablet, desktop).\n///\n/// @example scss\n///   @use 'path/to/mq' with ($show-breakpoints: ('mobile', 'tablet', 'desktop'));\n///\n///\n/// @type map\n$show-breakpoints: () !default;\n\n/// Customize the media type (for example: `@media screen` or `@media print`)\n/// By default sass-mq uses an \"all\" media type (`@media all and …`)\n///\n/// If you want to overried the media type, you can use this option.\n/// @example scss\n///   @use 'path/to/mq' with ($media-type: 'screen');\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and example\n$media-type: all !default;\n\n/// Convert pixels to ems\n///\n/// @param {Number} $px - value to convert\n///\n/// @example scss\n///  $font-size-in-ems: px2em(16px);\n///  p { font-size: px2em(16px); }\n///\n/// @returns {Number}\n\n@function px2em($px) {\n  @if math.is-unitless($px) {\n    @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\n    @return px2em($px * 1px);\n  }\n\n  // if $px is compatible with em units, then return value unchanged\n  @if math.compatible($px, 1em) {\n    @return $px;\n  }\n  @return math.div($px, 16px) * 1em;\n}\n\n/// Get a breakpoint's width\n///\n/// @param {String} $name - Name of the breakpoint. One of $breakpoints\n///\n/// @example scss\n///  $tablet-width: get-breakpoint-width(tablet);\n///  @media (min-width: get-breakpoint-width(tablet)) {}\n///\n/// @requires {Variable} $breakpoints\n///\n/// @returns {Number} Value in pixels\n@function get-breakpoint-width($name, $breakpoints: $breakpoints) {\n  @if map.has-key($breakpoints, $name) {\n    @return map.get($breakpoints, $name);\n  } @else {\n    @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\n    @return null;\n  }\n}\n\n/// Media Query mixin\n///\n/// @param {String | Boolean} $from [false] - One of $breakpoints\n/// @param {String | Boolean} $until [false] - One of $breakpoints\n/// @param {String | Boolean} $and [false] - Additional media query parameters\n/// @param {String} $media-type [$media-type] - Media type: screen, print…\n///\n/// @ignore Undocumented API, for advanced use only:\n/// @ignore @param {Map} $breakpoints [$breakpoints]\n///\n/// @content styling rules, wrapped into a @media query when $responsive is true\n///\n/// @requires {Variable} $media-type\n/// @requires {Variable} $breakpoints\n/// @requires {function} px2em\n/// @requires {function} get-breakpoint-width\n///\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\n///\n/// @example scss\n///  @use 'path/to/mq' as *;\n///  .element {\n///    @include mq($from: mobile) {\n///      color: red;\n///    }\n///    @include mq($until: tablet) {\n///      color: blue;\n///    }\n///    @include mq(mobile, tablet) {\n///      color: green;\n///    }\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\n///      color: teal;\n///    }\n///    @include mq(950px) {\n///      color: hotpink;\n///    }\n///    @include mq(tablet, $media-type: screen) {\n///      color: hotpink;\n///    }\n///    // Advanced use:\n///    $my-breakpoints: (L: 900px, XL: 1200px);\n///    @include mq(L, $breakpoints: $my-breakpoints) {\n///      color: hotpink;\n///    }\n///  }\n@mixin mq(\n  $from: false,\n  $until: false,\n  $and: false,\n  $media-type: $media-type,\n  $breakpoints: $breakpoints\n) {\n  $min-width: 0;\n  $max-width: 0;\n  $media-query: \"\";\n\n  // From: this breakpoint (inclusive)\n  @if $from {\n    @if meta.type-of($from) == number {\n      $min-width: px2em($from);\n    } @else {\n      $min-width: px2em(get-breakpoint-width($from, $breakpoints));\n    }\n  }\n\n  // Until: that breakpoint (exclusive)\n  @if $until {\n    @if meta.type-of($until) == number {\n      $max-width: px2em($until);\n    } @else {\n      $max-width: px2em(get-breakpoint-width($until, $breakpoints)) - 0.01em;\n    }\n  }\n\n  @if $min-width != 0 {\n    $media-query: \"#{$media-query} and (min-width: #{$min-width})\";\n  }\n  @if $max-width != 0 {\n    $media-query: \"#{$media-query} and (max-width: #{$max-width})\";\n  }\n  @if $and {\n    $media-query: \"#{$media-query} and #{$and}\";\n  }\n\n  // Remove unnecessary media query prefix 'all and '\n  @if $media-type == \"all\" and $media-query != \"\" {\n    $media-type: \"\";\n    $media-query: string.slice(string.unquote($media-query), 6);\n  }\n\n  @media #{$media-type + $media-query} {\n    @content;\n  }\n}\n\n/// Quick sort\n///\n/// @author Sam Richards\n/// @access private\n/// @param {List} $list - List to sort\n/// @returns {List} Sorted List\n/* stylelint-disable-next-line scss/at-function-pattern */\n@function _quick-sort($list) {\n  $less: ();\n  $equal: ();\n  $large: ();\n\n  @if length($list) > 1 {\n    $seed: list.nth($list, math.ceil(math.div(length($list), 2)));\n\n    @each $item in $list {\n      @if $item == $seed {\n        $equal: list.append($equal, $item);\n      } @else if $item < $seed {\n        $less: list.append($less, $item);\n      } @else if $item > $seed {\n        $large: list.append($large, $item);\n      }\n    }\n\n    @return join(join(_quick-sort($less), $equal), _quick-sort($large));\n  }\n\n  @return $list;\n}\n\n/// Sort a map by values (works with numbers only)\n///\n/// @access private\n/// @param {Map} $map - Map to sort\n/// @returns {Map} Map sorted by value\n/* stylelint-disable-next-line scss/at-function-pattern */\n@function _map-sort-by-value($map) {\n  $map-sorted: ();\n  $map-keys: map.keys($map);\n  $map-values: map.values($map);\n  $map-values-sorted: _quick-sort($map-values);\n\n  // Reorder key/value pairs based on key values\n  @each $value in $map-values-sorted {\n    $index: index($map-values, $value);\n    $key: list.nth($map-keys, $index);\n    $map-sorted: map.merge(\n      $map-sorted,\n      (\n        $key: $value,\n      )\n    );\n\n    // Unset the value in $map-values to prevent the loop\n    // from finding the same index twice\n    $map-values: list.set-nth($map-values, $index, 0);\n  }\n\n  @return $map-sorted;\n}\n\n/// Add a breakpoint\n///\n/// @param {String} $name - Name of the breakpoint\n/// @param {Number} $width - Width of the breakpoint\n///\n/// @requires {Variable} $breakpoints\n///\n/// @example scss\n///  @include add-breakpoint(tvscreen, 1920px);\n///  @include mq(tvscreen) {}\n@mixin add-breakpoint($name, $width) {\n  $new-breakpoint: (\n    $name: $width,\n  );\n  $breakpoints: map.merge($breakpoints, $new-breakpoint) !global;\n  $breakpoints: _map-sort-by-value($breakpoints) !global;\n}\n\n/// Show the active breakpoint in the top right corner of the viewport\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n///\n/// @param {List} $show-breakpoints [$show-breakpoints] - List of breakpoints to show in the top right corner\n/// @param {Map} $breakpoints [$breakpoints] - Breakpoint names and sizes\n///\n/// @requires {Variable} $breakpoints\n/// @requires {Variable} $show-breakpoints\n///\n/// @example scss\n///  // Show breakpoints using global settings\n///  @include show-breakpoints;\n///\n///  // Show breakpoints using custom settings\n///  @include show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\n@mixin show-breakpoints(\n  $show-breakpoints: $show-breakpoints,\n  $breakpoints: $breakpoints\n) {\n  body::before {\n    position: fixed;\n    z-index: 100;\n    top: 0;\n    right: 0;\n    padding: 3px 6px;\n    background-color: #fcf8e3;\n    border-bottom: 1px solid #fbeed5;\n    border-left: 1px solid #fbeed5;\n    color: #c09853;\n    font: small-caption;\n    pointer-events: none;\n\n    // Loop through the breakpoints that should be shown\n    @each $show-breakpoint in $show-breakpoints {\n      $width: get-breakpoint-width($show-breakpoint, $breakpoints);\n      @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n        content: \"#{$show-breakpoint} ≥ #{$width} (#{px2em($width)})\";\n      }\n    }\n  }\n}\n\n@if list.length($show-breakpoints) > 0 {\n  @include show-breakpoints;\n}\n","@use '../../scss/abstracts' as *;\n\n.container {\n  @include container;\n\n  &--size-m {\n    @include container;\n  }\n\n  &--size-infinity {\n    @include container(none);\n  }\n}\n","@use '../../scss/abstracts' as *;\n\n.title {\n  margin-top: 0;\n  margin-bottom: 0;\n\n  color: $color-foreground-fourth;\n  font-size: 46px;\n  font-style: normal;\n  font-weight: 800;\n  line-height: 1;\n\n  > span {\n    color: $color-foreground-secondary;\n  }\n\n  @include mq($until: lg) {\n    font-size: 40px;\n  }\n\n  &--size-s {\n    font-size: 32px;\n\n    @include mq($until: lg) {\n      font-size: 24px;\n    }\n\n    @include mq($until: sm) {\n      font-size: 18px;\n    }\n  }\n\n  &--size-m {\n  }\n\n  &--size-l {\n    font-size: 72px;\n\n    @include mq($until: lg) {\n      font-size: 48px;\n    }\n\n    @include mq($until: md) {\n      font-size: 36px;\n    }\n  }\n\n  &--size-xl {\n    font-size: 74px;\n\n    @include mq($until: lg) {\n      font-size: 40px;\n    }\n  }\n}\n","@use 'sass:color';\n@use '../../scss/abstracts' as *;\n\n.button {\n  $block-name: &;\n\n  @include reset-btn;\n\n  display: inline-flex;\n  align-items: center;\n  min-height: 54px;\n  padding: 5px 40px;\n  background-color: $color-background-secondary;\n  color: $color-foreground-third;\n  border-radius: 100px;\n  font-weight: 700;\n  transition: background-color $transition-fast, color $transition-fast,\n    border-color $transition-fast;\n  font-size: 22px;\n  line-height: normal;\n\n  &:hover {\n    background-color: color.adjust($color-background-secondary, $alpha: -0.4);\n  }\n\n  &:active {\n    background-color: $color-background-secondary;\n  }\n\n  @include mq($until: lg) {\n    font-size: 16px;\n    min-height: 33px;\n  }\n\n  &--size-l {\n    @include mq($until: lg) {\n      font-size: 22px;\n      min-height: 54px;\n    }\n\n    @include mq($until: sm) {\n      font-size: 16px;\n      min-height: 33px;\n    }\n  }\n\n  &--variant-primary-outlined {\n    border: 2px solid $color-background-secondary;\n    background-color: transparent;\n    color: $color-foreground-primary;\n\n    &:hover {\n      background-color: transparent;\n      border-color: color.adjust($color-background-secondary, $alpha: -0.4);\n      color: color.adjust($color-foreground-primary, $alpha: -0.4);\n    }\n\n    &:active {\n      border-color: $color-background-secondary;\n      background-color: transparent;\n      color: $color-foreground-primary;\n    }\n  }\n}\n","@use 'sass:color';\n@use '../../../shared/scss/abstracts' as *;\n\n.intro {\n  $block-name: &;\n\n  position: relative;\n  background-size: cover;\n  background-position: center;\n  background-repeat: repeat;\n  padding-top: 44px;\n  padding-bottom: 44px;\n  min-height: 490px;\n  display: flex;\n  align-items: center;\n  overflow: hidden;\n\n  @include mq($until: xl) {\n    min-height: 420px;\n  }\n\n  @include mq($until: md) {\n    min-height: 452px;\n    align-items: flex-end;\n    text-align: center;\n  }\n\n  &__rocket {\n    position: absolute;\n    bottom: 0;\n    right: 125px;\n    rotate: -25deg;\n\n    @include mq($until: xl) {\n      right: 60px;\n      bottom: -25px;\n    }\n\n    @include mq($until: md) {\n      right: 85px;\n      bottom: 30px;\n    }\n  }\n\n  &__rocket-image {\n    transition: transform 1s ease-in-out;\n  }\n\n  &__container {\n    position: relative;\n\n    @include mq($until: md) {\n      position: static;\n    }\n  }\n\n  &__earth {\n    position: absolute;\n    top: 0;\n    right: 0;\n    width: 360px;\n    height: 367px;\n    top: 50%;\n    transform: translate3d(0, -50%, 0);\n    background-repeat: no-repeat;\n\n    &:hover {\n      #{$block-name} {\n        &__rocket-image {\n          transform: translate(700%, 0);\n        }\n      }\n    }\n\n    &:not(:hover) {\n      #{$block-name} {\n        &__rocket-image {\n          // transform: translate(-50%, -50%) rotate(180deg);\n        }\n      }\n    }\n\n    @include mq($until: xl) {\n      width: 299px;\n      height: 336px;\n      margin-right: -50px;\n      top: 100px;\n    }\n\n    @include mq($until: md) {\n      right: auto;\n      left: 50%;\n      transform: translate3d(-50%, 0, 0);\n      top: -100px;\n      background-size: contain;\n    }\n  }\n\n  &__box {\n    display: flex;\n    flex-direction: column;\n    gap: 22px;\n    align-items: flex-start;\n    padding-right: 490px;\n\n    @include mq($until: xl) {\n      padding-right: 300px;\n    }\n\n    @include mq($until: md) {\n      padding-right: 0;\n      justify-content: flex-end;\n      align-items: center;\n    }\n  }\n\n  &__inner {\n  }\n\n  &__title {\n  }\n\n  &__description {\n    font-size: 32px;\n    font-weight: 800;\n    line-height: 120%;\n    margin-top: 0;\n    margin-bottom: 0;\n\n    @include mq($until: xl) {\n      font-size: 22px;\n    }\n\n    > span {\n      color: $color-foreground-primary;\n    }\n  }\n  &__button {\n  }\n}\n","@use '../../../shared/scss/abstracts' as *;\n@use 'sass:color';\n\n.offers {\n  $block-name: &;\n\n  padding-top: 58px;\n  padding-bottom: 58px;\n\n  @include mq($until: md) {\n    padding-top: 50px;\n    padding-bottom: 50px;\n  }\n\n  &__title {\n    margin-bottom: 40px;\n\n    @include mq($until: md) {\n      margin-bottom: 30px;\n    }\n  }\n\n  &__grid {\n    display: grid;\n    gap: 40px;\n    grid-template-columns: repeat(2, 1fr);\n\n    @include mq($until: lg) {\n      gap: 30px;\n    }\n\n    @include mq($until: md) {\n      grid-template-columns: repeat(1, 1fr);\n    }\n  }\n\n  &__grid-cell {\n    &--size-m {\n    }\n\n    &--size-l {\n      grid-column: span 2;\n\n      @include mq($until: lg) {\n        grid-column: span 1;\n      }\n    }\n  }\n}\n\n.offer {\n  $block-name: &;\n\n  border-radius: $border-radius-m;\n  overflow: hidden;\n  background-size: calc(100% + 2px) calc(100% + 2px);\n  background-position: -1px -1px;\n  background-repeat: no-repeat;\n  display: flex;\n  flex-direction: column;\n  gap: 22px;\n  padding: 35px;\n  align-items: flex-start;\n  min-height: 340px;\n  justify-content: flex-end;\n\n  @include mq($until: xl) {\n    background-size: cover;\n    background-position: center;\n  }\n\n  @include mq($until: lg) {\n    padding: 25px;\n  }\n\n  @include mq($until: sm) {\n    min-height: 340px;\n  }\n\n  &__title {\n    max-width: 280px;\n\n    @include mq($until: lg) {\n      max-width: 240px;\n    }\n  }\n\n  &__description {\n    margin-top: 0;\n    margin-bottom: 0;\n    font-size: 24px;\n    font-weight: 800;\n    line-height: 120%;\n\n    @include mq($until: lg) {\n      font-size: 16px;\n    }\n  }\n\n  &__button {\n  }\n\n  &--size-l {\n    #{$block-name} {\n      &__title {\n        max-width: 630px;\n\n        @include mq($until: lg) {\n          max-width: 240px;\n        }\n      }\n\n      &__description {\n        font-size: 26px;\n\n        @include mq($until: lg) {\n          font-size: 16px;\n        }\n      }\n    }\n  }\n}\n","@use 'sass:color';\n@use '../../../shared/scss/abstracts' as *;\n\n.space-journey {\n  $block-name: &;\n\n  &__body {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  &__button {\n    order: 2;\n    padding: 5px;\n    margin: -5px;\n    color: $color-foreground-primary;\n    font-size: 20px;\n    font-weight: 800;\n    cursor: pointer;\n    user-select: none;\n    margin-top: 12px;\n    transition: color $transition-fast;\n\n    &:hover {\n      color: color.adjust($color-foreground-primary, $alpha: -0.4);\n    }\n\n    &:active {\n      color: $color-foreground-primary;\n    }\n\n    @include mq($until: lg) {\n      font-size: 16px;\n      line-height: 19px;\n    }\n\n    @include mq($until: md) {\n      font-size: 14px;\n      line-height: 17px;\n    }\n  }\n\n  &__input {\n    order: 1;\n    display: none;\n\n    &:checked {\n      & ~ #{$block-name}__text {\n        -webkit-line-clamp: 3;\n      }\n\n      & ~ #{$block-name}__menu {\n        transform: translate3d(0, 0, 0);\n      }\n    }\n  }\n\n  &__text {\n    font-size: 20px;\n    margin-top: 0;\n    margin-bottom: 0;\n    line-height: 23px;\n    color: $color-text-muted;\n    font-weight: 700;\n\n    overflow: hidden;\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    // -webkit-line-clamp: 3;\n\n    @include mq($until: lg) {\n      font-size: 16px;\n      line-height: 19px;\n    }\n\n    @include mq($until: md) {\n      font-size: 14px;\n      line-height: 17px;\n    }\n  }\n\n  &__title {\n    margin-bottom: 17px;\n  }\n}\n","@use '../../../shared/scss/abstracts' as *;\n@use 'sass:color';\n\n.footer {\n  $block-name: &;\n\n  background-color: $color-background-third;\n  min-height: 130px;\n  text-align: center;\n  padding: 15px 0;\n  overflow: hidden;\n  margin-top: 58px;\n\n  @include mq($until: md) {\n    margin-top: 50px;\n  }\n\n  &__rocket {\n    margin-bottom: -8px;\n    animation: shake 0.3s ease-in-out infinite;\n  }\n\n  &__rocket-image {\n    rotate: -25deg;\n  }\n\n  &__text {\n    color: $color-foreground-primary;\n\n    font-size: 18px;\n    font-weight: 800;\n    line-height: 21px;\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n}\n","/*! modern-normalize v3.0.1 | MIT License | https://github.com/sindresorhus/modern-normalize */\n\n/*\nDocument\n========\n*/\n\n/**\nUse a better box model (opinionated).\n*/\n\n*,\n::before,\n::after {\n\tbox-sizing: border-box;\n}\n\nhtml {\n\t/* Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3) */\n\tfont-family:\n\t\tsystem-ui,\n\t\t'Segoe UI',\n\t\tRoboto,\n\t\tHelvetica,\n\t\tArial,\n\t\tsans-serif,\n\t\t'Apple Color Emoji',\n\t\t'Segoe UI Emoji';\n\tline-height: 1.15; /* 1. Correct the line height in all browsers. */\n\t-webkit-text-size-adjust: 100%; /* 2. Prevent adjustments of font size after orientation changes in iOS. */\n\ttab-size: 4; /* 3. Use a more readable tab size (opinionated). */\n}\n\n/*\nSections\n========\n*/\n\nbody {\n\tmargin: 0; /* Remove the margin in all browsers. */\n}\n\n/*\nText-level semantics\n====================\n*/\n\n/**\nAdd the correct font weight in Chrome and Safari.\n*/\n\nb,\nstrong {\n\tfont-weight: bolder;\n}\n\n/**\n1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)\n2. Correct the odd 'em' font sizing in all browsers.\n*/\n\ncode,\nkbd,\nsamp,\npre {\n\tfont-family:\n\t\tui-monospace,\n\t\tSFMono-Regular,\n\t\tConsolas,\n\t\t'Liberation Mono',\n\t\tMenlo,\n\t\tmonospace; /* 1 */\n\tfont-size: 1em; /* 2 */\n}\n\n/**\nAdd the correct font size in all browsers.\n*/\n\nsmall {\n\tfont-size: 80%;\n}\n\n/**\nPrevent 'sub' and 'sup' elements from affecting the line height in all browsers.\n*/\n\nsub,\nsup {\n\tfont-size: 75%;\n\tline-height: 0;\n\tposition: relative;\n\tvertical-align: baseline;\n}\n\nsub {\n\tbottom: -0.25em;\n}\n\nsup {\n\ttop: -0.5em;\n}\n\n/*\nTabular data\n============\n*/\n\n/**\nCorrect table border color inheritance in Chrome and Safari. (https://issues.chromium.org/issues/40615503, https://bugs.webkit.org/show_bug.cgi?id=195016)\n*/\n\ntable {\n\tborder-color: currentcolor;\n}\n\n/*\nForms\n=====\n*/\n\n/**\n1. Change the font styles in all browsers.\n2. Remove the margin in Firefox and Safari.\n*/\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n\tfont-family: inherit; /* 1 */\n\tfont-size: 100%; /* 1 */\n\tline-height: 1.15; /* 1 */\n\tmargin: 0; /* 2 */\n}\n\n/**\nCorrect the inability to style clickable types in iOS and Safari.\n*/\n\nbutton,\n[type='button'],\n[type='reset'],\n[type='submit'] {\n\t-webkit-appearance: button;\n}\n\n/**\nRemove the padding so developers are not caught out when they zero out 'fieldset' elements in all browsers.\n*/\n\nlegend {\n\tpadding: 0;\n}\n\n/**\nAdd the correct vertical alignment in Chrome and Firefox.\n*/\n\nprogress {\n\tvertical-align: baseline;\n}\n\n/**\nCorrect the cursor style of increment and decrement buttons in Safari.\n*/\n\n::-webkit-inner-spin-button,\n::-webkit-outer-spin-button {\n\theight: auto;\n}\n\n/**\n1. Correct the odd appearance in Chrome and Safari.\n2. Correct the outline style in Safari.\n*/\n\n[type='search'] {\n\t-webkit-appearance: textfield; /* 1 */\n\toutline-offset: -2px; /* 2 */\n}\n\n/**\nRemove the inner padding in Chrome and Safari on macOS.\n*/\n\n::-webkit-search-decoration {\n\t-webkit-appearance: none;\n}\n\n/**\n1. Correct the inability to style clickable types in iOS and Safari.\n2. Change font properties to 'inherit' in Safari.\n*/\n\n::-webkit-file-upload-button {\n\t-webkit-appearance: button; /* 1 */\n\tfont: inherit; /* 2 */\n}\n\n/*\nInteractive\n===========\n*/\n\n/*\nAdd the correct display in Chrome and Safari.\n*/\n\nsummary {\n\tdisplay: list-item;\n}\n","@font-face {\n  font-family: 'Lato';\n  src: url('../../fonts/Lato-Bold.woff2') format('woff2'),\n    url('../../fonts/Lato-Bold.woff') format('woff');\n  font-weight: 700;\n  font-style: normal;\n}\n\n@font-face {\n  font-family: 'Lato';\n  src: url('../../fonts/Lato-ExtraBold.woff2') format('woff2'),\n    url('../../fonts/Lato-ExtraBold.woff') format('woff');\n  font-weight: 800;\n  font-style: normal;\n}\n","@use '../abstracts' as *;\n\n@keyframes fade-in {\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n}\n\n@keyframes fade-in-up {\n  from {\n    opacity: 0;\n    transform: translateY(30px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes shake {\n  0% {\n    transform: translateX(0) rotate(0);\n  }\n  25% {\n    transform: translateX(-2px) rotate(-0deg);\n  }\n  50% {\n    transform: translateX(2px) rotate(0deg);\n  }\n  75% {\n    transform: translateX(-2px) rotate(-0deg);\n  }\n  100% {\n    transform: translateX(0) rotate(0);\n  }\n}\n","@use 'sass:color';\n\n@use '../abstracts' as *;\n\n@at-root {\n  @viewport {\n    width: device-width;\n  }\n}\n\nhtml {\n  box-sizing: border-box;\n  -webkit-tap-highlight-color: color.adjust($color-background-secondary, $alpha: -0.8);\n  -ms-overflow-style: scrollbar;\n  text-size-adjust: 100%;\n  min-width: 375px;\n  min-height: 100%;\n}\n\n*,\n*::before,\n*::after {\n  box-sizing: inherit;\n}\n\nbody {\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  min-height: 100%; // If dvh is not supported\n  min-height: 100dvh;\n  margin: 0;\n  background: $color-background-primary;\n  color: $color-text;\n  word-break: break-word;\n  font-family: $font-family-main;\n  font-size: $base-font-size;\n  line-height: $base-line-height;\n  text-align: left;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-rendering: optimizeLegibility;\n  font-weight: 800;\n}\n\n#root {\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  min-height: 100%; // If dvh is not supported\n  min-height: 100dvh;\n}\n\nmain {\n  flex-grow: 1;\n}\n\n[tabindex='-1']:focus {\n  outline: none !important;\n}\n\n[role='button'] {\n  cursor: pointer;\n}\n\ninput[type='search'] {\n  appearance: textfield;\n}\n\na,\nbutton,\n[role='button'],\ninput,\nlabel,\nselect,\ntextarea {\n  touch-action: manipulation;\n  margin: 0;\n}\n\nbutton,\ninput {\n  overflow: visible;\n  text-transform: none;\n}\n\nbutton,\nhtml [type='button'],\n[type='reset'],\n[type='submit'] {\n  appearance: button;\n}\n\nbutton::-moz-focus-inner,\n[type='button']::-moz-focus-inner,\n[type='reset']::-moz-focus-inner,\n[type='submit']::-moz-focus-inner {\n  padding: 0;\n  border-style: none;\n}\n\ninput[type='date'],\ninput[type='time'],\ninput[type='datetime-local'],\ninput[type='month'] {\n  appearance: listbox;\n}\n\ntextarea {\n  overflow: auto;\n  resize: vertical;\n}\n\nsvg {\n  fill: currentColor;\n\n  a &,\n  button & {\n    pointer-events: none;\n  }\n\n  &:not(:root) {\n    overflow: hidden;\n  }\n}\n\nimg {\n  max-width: 100%;\n  height: auto;\n}\n\n::selection {\n  background: $color-background-third;\n  color: $color-foreground-primary;\n}\n\n::-moz-selection {\n  background: $color-background-third;\n  color: $color-foreground-primary;\n}\n\nbutton {\n  appearance: none;\n}\n\na,\nbutton {\n  outline: none;\n\n  &:focus {\n    outline: none;\n  }\n}\n\nb,\nstrong {\n  font-weight: 800;\n}\n\nsmall {\n  font-size: 80%;\n}\n"],"names":[],"sourceRoot":""}